name: Go Tests with Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Install Go Task
      run: go install github.com/go-task/task/v3/cmd/task@latest

    - name: Run tests with coverage
      run: task test:coverage:detail

    - name: Generate coverage HTML report
      run: task test:coverage:html

    - name: Save coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.out

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build . --tag gron:test

    - name: Test Docker image
      run: |
        docker run -d --name gron-test \
          -e "TASK_TEST=@every 5s echo 'Test task running'" \
          gron:test

        # Wait for tasks to run
        sleep 10

        # Check if container is still running (should be)
        CONTAINER_STATUS=$(docker inspect --format='{{.State.Status}}' gron-test)
        echo "Container status: $CONTAINER_STATUS"
        if [ "$CONTAINER_STATUS" != "running" ]; then
          echo "Error: Container is not running"
          docker logs gron-test
          exit 1
        fi

        # Check for task execution
        TASK_COUNT=$(docker logs gron-test | grep -c "Test task running")
        echo "Task execution count: $TASK_COUNT"
        if [ "$TASK_COUNT" -lt 1 ]; then
          echo "Error: No tasks executed"
          docker logs gron-test
          exit 1
        fi

        # Clean up
        docker stop gron-test
        docker rm gron-test
