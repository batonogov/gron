# https://taskfile.dev

version: "3"

vars:
  APP_NAME: gron

tasks:
  default:
    desc: Display available tasks
    cmds:
      - task -l

  build:
    desc: Build the application
    cmds:
      - go build -o bin/{{.APP_NAME}}

  run:
    desc: Run the application
    cmds:
      - go run main.go

  docker:build:
    desc: Build Docker image
    cmds:
      - docker build -t {{.APP_NAME}}:latest .

  docker:run:
    desc: Run Docker container
    cmds:
      - |
        docker run -d --name {{.APP_NAME}} \
          -e "TASK_DEMO=* * * * * echo 'Running demo task'" \
          {{.APP_NAME}}:latest

  docker:logs:
    desc: Show Docker container logs
    cmds:
      - docker logs -f {{.APP_NAME}}

  docker:stop:
    desc: Stop Docker container
    cmds:
      - docker stop {{.APP_NAME}} || true
      - docker rm {{.APP_NAME}} || true

  test:
    desc: Run all tests
    cmds:
      - go test -v ./...

  test:coverage:
    desc: Run tests with coverage
    cmds:
      - go test -cover ./...

  test:coverage:detail:
    desc: Run tests with detailed coverage report
    cmds:
      - go test -coverprofile=coverage.out ./...
      - go tool cover -func=coverage.out

  test:coverage:html:
    desc: Run tests with HTML coverage report
    cmds:
      - go test -coverprofile=coverage.out ./...
      - go tool cover -html=coverage.out

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf bin/ coverage.out

  lint:
    desc: Run linters
    cmds:
      - if command -v golangci-lint; then golangci-lint run; else echo "golangci-lint not installed"; fi

  fmt:
    desc: Format code
    cmds:
      - go fmt ./...
